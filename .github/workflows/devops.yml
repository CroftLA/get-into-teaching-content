---  
name: Release to test
on: 
   release:
     types:  [prereleased]
env:
  DOCKERHUB_REPOSITORY: dfedigital/get-into-teaching-frontend
  TF_VAR_user:              "${{ secrets.GOVUKPAAS_USERNAME  }}"
  TF_VAR_password:          "${{ secrets.GOVUKPAAS_PASSWORD  }}"
  TF_VAR_HTTPAUTH_PASSWORD: "${{ secrets.HTTPAUTH_PASSWORD }}"
  TF_VAR_HTTPAUTH_USERNAME: "${{ secrets.HTTPAUTH_USERNAME }}"
  TF_VAR_RAILS_MASTER_KEY:  "${{ secrets.RAILS_MASTER_KEY_ROLLING }}"
  TF_VAR_RAILS_ENV:         "rolling"
  ARM_ACCESS_KEY:           "${{ secrets.DEV_ARM_ACCESS_KEY  }}"
  CF_PROVIDER_DIR: $HOME/.terraform.d/plugins/linux_amd64/terraform-provider-cloudfoundry

jobs:
  deploy_qa:
    name: 'Deploy to Quality Assurance'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
       - name: Checkout
         uses: actions/checkout@v2
       - name: Get Short SHA
         id: sha
         run: echo ::set-output name=short::$(git rev-parse --short $GITHUB_SHA)
       - name: Install Terraform CloudFoundry Provider
         run: |
             mkdir -p $HOME/.terraform.d/plugins/linux_amd64
             wget -O ${{ env.CF_PROVIDER_DIR }} https://github.com/cloudfoundry-community/terraform-provider-cf/releases/latest/download/terraform-provider-cloudfoundry_linux_amd64
             chmod +x ${{ env.CF_PROVIDER_DIR }}
   
       - name: Terraform Init
         run: |
             cd terraform/paas && pwd
             terraform init -backend-config=sandpit.bk.vars
       - name: Terraform Plan
         run: |
             cd terraform/paas && pwd
             terraform plan -var-file=sandpit.env.tfvars -out plan
         env:
             TF_VAR_paas_app_docker_image: ${{env.DOCKERHUB_REPOSITORY}}:sha-${{ steps.sha.outputs.short}}
       - name: Terraform Apply
         run: |
             cd terraform/paas && pwd
             terraform apply -auto-approve plan
  check_deploy:
    name: Check Delivery to Development
    needs:
          deploy
    runs-on: ubuntu-latest
    steps:
       - name: Checkout
         uses: actions/checkout@v2
       - name: Get Short SHA
         id: sha
         run: echo ::set-output name=short::$(git rev-parse --short $GITHUB_SHA)
       - name: Get Container Details
         run: echo ::set-output name=details::$(cf ${{env.DOCKERHUB_REPOSITORY}} | grep "docker image" | cut -d\  -f8)

